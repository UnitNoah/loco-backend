name: Backend CI  # 워크플로우 이름 (GitHub Actions 목록에 표시됨)

on:
  push:
    branches: [ main, develop ]        # main, develop 브랜치에 push될 때 실행
    paths:
      - 'loco-api/**'                  # 백엔드 폴더 내 변경이 있을 때만 실행
  pull_request:
    branches: [ main, develop ]        # main 또는 develop 브랜치 대상 PR일 때 실행
    paths:
      - 'loco-api/**'

jobs:
  build-test-analyze:
    name: Build, Test, Coverage, SonarCloud
    runs-on: ubuntu-latest             # 실행 환경 (Linux 최신 우분투 이미지)

    steps:
      # 소스코드 체크아웃
      - name: Checkout source
        uses: actions/checkout@v3

      # JDK 21 세팅
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      # Gradle 빌드 캐시 적용 (빌드 시간 단축)
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      # gradlew 실행 권한 부여 (Linux에서 필수)
      - name: Grant execute permission for Gradle wrapper
        run: chmod +x gradlew

      # 테스트 + 커버리지 리포트 생성 (JaCoCo)
      - name: Run tests with coverage
        run: ./gradlew clean test jacocoTestReport

      # SonarCloud 정적 분석 실행
      - name: Run SonarCloud analysis
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          args: >
            -Dsonar.projectKey=unitnoah_loco-api                     # 실제 SonarCloud 프로젝트 키로 변경
            -Dsonar.organization=unitnoah                            # 실제 조직 ID로 변경
            -Dsonar.host.url=https://sonarcloud.io
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}               # GitHub Secrets에 등록한 토큰 사용
