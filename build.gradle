// Gradle에서 사용할 플러그인 선언
plugins {
	id 'java'                                                       // Java 프로젝트
	id 'org.springframework.boot' version '3.5.3'                   // Spring Boot 플러그인
	id 'io.spring.dependency-management' version '1.1.7'            // 의존성 버전 자동 관리
	id "org.sonarqube" version "4.4.1.3373"                         // SonarCloud 분석용 플러그인
	id 'jacoco'                                                     // 테스트 커버리지 분석용 플러그인 (JaCoCo)
}

// 기본 그룹 및 버전 설정
group = 'com.loco'
version = '0.0.1-SNAPSHOT'

// Java 버전 설정 (Java 21 사용)
java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

// lombok 등 annotationProcessor 설정
configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

// 의존성 중앙 저장소 설정
repositories {
	mavenCentral()
}

// 프로젝트 의존성 목록
dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'          // JPA
	implementation 'org.springframework.boot:spring-boot-starter-validation'        // 유효성 검사
	implementation 'org.springframework.boot:spring-boot-starter-web'               // 웹 MVC
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'        // Swagger 문서화

	compileOnly 'org.projectlombok:lombok'                                           // Lombok (컴파일 시점)
	annotationProcessor 'org.projectlombok:lombok'                                   // Lombok 처리기
	runtimeOnly 'org.postgresql:postgresql'                                          // PostgreSQL 드라이버

	testImplementation 'org.springframework.boot:spring-boot-starter-test'          // 테스트 의존성
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'                    // JUnit 런처
}

// 테스트 설정 (JUnit 5 사용)
tasks.named('test') {
	useJUnitPlatform()
}

// JaCoCo 설정: 커버리지 리포트용 버전 지정
jacoco {
	toolVersion = "0.8.11"
}

// JaCoCo 리포트 생성 설정
// `./gradlew jacocoTestReport` 실행 시 XML, HTML 커버리지 리포트 생성
jacocoTestReport {
	dependsOn test // 테스트 실행 후 커버리지 리포트 생성
	reports {
		xml.required = true           // SonarCloud 연동용 XML 리포트
		csv.required = false
		html.outputLocation = layout.buildDirectory.dir('jacocoHtml') // 로컬 확인용 HTML 리포트 경로
	}
}

// SonarCloud 분석 설정
// GitHub Actions 또는 로컬에서 `./gradlew sonarqube` 실행 시 적용
sonar {
	properties {
		property "sonar.projectKey", "yourGithubID_loco-api"                     // SonarCloud 내 프로젝트 키
		property "sonar.organization", "yourOrgID"                               // SonarCloud 조직 ID
		property "sonar.host.url", "https://sonarcloud.io"                       // 분석 서버 주소 (고정)

		// JaCoCo 커버리지 리포트 XML 경로
		property "sonar.coverage.jacoco.xmlReportPaths", "${buildDir}/reports/jacoco/test/jacocoTestReport.xml"
	}
}
